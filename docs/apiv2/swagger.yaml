swagger: "2.0"
info:
  version: "1.0.0"
  title: "Realtimebus V2"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "realtimebus.noi.bz.it"
paths:
  /vdv/import:
    post:
      tags:
        - "vdv"
      summary: "Upload and import VDV"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /vdv/validity/{date}:
    get:
      tags:
        - "vdv"
      summary: "Check imported VDV"
      description: ""
      parameters:
      - name: "date"
        in: "path"
        description: "Date"
        required: true
        type: "string"
        format: "date"
      responses:
        200:
          description: "Successful operation"
  /vdv/zip:
    get:
      tags:
        - "vdv"
      summary: "Download VDV"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /vdv/generateAppZip:
    get:
      tags:
        - "vdv"
      summary: "Generate archive"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /vdv/generateGtfs:
    get:
      tags:
        - "vdv"
      summary: "Generate GTFS"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /vdv/list:
    get:
      tags:
        - "vdv"
      summary: "List VDV archives"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /vdv/list/{name}:
    get:
      tags:
        - "vdv"
      summary: "Download VDV archive"
      description: ""
      parameters:
      - name: "name"
        in: "path"
        description: "List name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
  /geojson/realtime:
    get:
      tags:
        - "geojson"
      summary: "Get realtime positions"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /geojson/realtime/lines/{lineID}:
    get:
      tags:
        - "geojson"
      summary: "Get positions by line"
      description: ""
      parameters:
      - name: "lineID"
        in: "path"
        description: "Line ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
  /geojson/realtime/vehicle/{vehicleID}:
    get:
      tags:
        - "geojson"
      summary: "Get positions by vehicle"
      description: ""
      parameters:
      - name: "vehicleID"
        in: "path"
        description: "Vehicle ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
  /geojson/receiver:
    post:
      tags:
        - "geojson"
      summary: "Update realtime positions"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /geojson/lines:
    get:
      tags:
        - "geojson"
      summary: "Get lines"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /geojson/stops:
    get:
      tags:
        - "geojson"
      summary: "Get bus stops"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /geojson/{stopID}/buses:
    get:
      tags:
        - "geojson"
      summary: "Get upcoming buses for stop"
      description: ""
      parameters:
      - name: "stopID"
        in: "path"
        description: "Stop ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
  /geojson/{tripID}/stops:
    get:
      tags:
        - "geojson"
      summary: "Get upcoming stops for trip"
      description: ""
      parameters:
      - name: "tripID"
        in: "path"
        description: "Trip ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
  /app/realtime:
    get:
      tags:
        - "app"
      summary: "Get realtime positions"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /app/realtime/delays:
    get:
      tags:
        - "app"
      summary: "Get vehicle delays"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /app/realtime/line/{lineID}:
    get:
      tags:
        - "app"
      summary: "Get positions by line"
      description: ""
      parameters:
      - name: "lineID"
        in: "path"
        description: "Line ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
  /app/realtime/vehicle/{vehicleID}:
    get:
      tags:
        - "app"
      summary: "Get positions by vehicle"
      description: ""
      parameters:
      - name: "vehicleID"
        in: "path"
        description: "Vehicle ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
  /app/beacons/buses:
    post:
      tags:
        - "app"
      summary: "Insert/update beacon"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /app/beacons/busstops:
    post:
      tags:
        - "app"
      summary: "Insert/update bus stop"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /gtfs/realtime:
    get:
      tags:
        - "gtfs"
      summary: "Realtime data"
      description: "Realtime data feed according to the GTFS Realtime specification."
      produces:
        - application/x-protobuf
      responses:
        200:
          description: "Successful operation"
          content:
            application/x-protobuf:
              schema:
                type: string
                format: binary
  /status:
    get:
      tags:
        - "other"
      summary: "Get the server status"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /firebase/sync:
    get:
      tags:
        - "other"
      summary: "Notify Firebase topics"
      description: ""
      responses:
        200:
          description: "Successful operation"
  /v2/import:
    get:
      tags:
        - "input/output"
      summary: "Import schedule and paths"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Service"
  /v2/calendar:
    get:
      tags:
        - "services"
      summary: "List all services"
      description: "List all the defined services along with their information."
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Service"
  /v2/services:
    get:
      tags:
        - "services"
      summary: "List all services"
      description: "List all the defined services along with their information."
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Service"
  /v2/services/active:
    get:
      tags:
        - "services"
      summary: "List all active services"
      description: "List all the defined services active on the current day along with their information."
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Service"
  /v2/services/active/{date}:
    get:
      tags:
        - "services"
      summary: "List all services for date"
      description: "List all the defined services active on the given date along with their information."
      produces:
      - "application/json"
      parameters:
      - name: "date"
        in: "path"
        description: "Date"
        required: true
        type: "string"
        format: "date"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Service"
  /v2/calendar.txt:
    get:
      tags:
        - "services"
      summary: "List all services"
      description: "List all services in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/calendar.csv:
    get:
      tags:
        - "services"
      summary: "List all services"
      description: "List all services in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/calendar_dates.txt:
    get:
      tags:
        - "services"
      summary: "List all added/removed dates"
      description: "List all service added or removed dates in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/calendar_dates.csv:
    get:
      tags:
        - "services"
      summary: "List all added/removed dates"
      description: "List all service added or removed dates in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/routes:
    get:
      tags:
        - "routes"
      summary: "List all routes"
      description: "List all routes along with their summary information."
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RouteSummary"
  /v2/routes/service/{serviceID}:
    get:
      tags:
        - "routes"
      summary: "List all routes for service"
      description: "List all routes related to the given service along with their summary information."
      produces:
      - "application/json"
      parameters:
      - name: "serviceID"
        in: "path"
        description: "Service identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RouteSummary"
  /v2/routes/{routeID}:
    get:
      tags:
        - "routes"
      summary: "Get single route"
      description: "Get all details concerning a single route, including all related services in which the route is defined/active."
      produces:
      - "application/json"
      parameters:
      - name: "routeID"
        in: "path"
        description: "Route identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Route"
        404:
          description: "Route not found"
  /v2/variants/{variantID}.geojson:
    get:
      tags:
        - "routes"
      summary: "Route variant as GeoJSON"
      description: "Get the route's GeoJSON geometry and representation for a given service and variant."
      produces:
      - "application/json"
      parameters:
      - name: "variantID"
        in: "path"
        description: "Variant identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
        404:
          description: "Variant not found"
  /v2/variants/{variantID}.kml:
    get:
      tags:
        - "routes"
      summary: "Route variant as KML"
      description: "Get the route's geometry and representation for a given service and variant in the KML format."
      produces:
      - "application/json"
      parameters:
      - name: "variantID"
        in: "path"
        description: "Variant identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
        404:
          description: "Variant not found"
  /v2/routes.txt:
    get:
      tags:
        - "routes"
      summary: "List all routes"
      description: "List all routes in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/routes.csv:
    get:
      tags:
        - "routes"
      summary: "List all routes"
      description: "List all routes in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/trips:
    get:
      tags:
        - "trips"
      summary: "List all trips"
      description: "List all the trips along with their summary information."
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TripSummary"
  /v2/trips/route/{routeID}:
    get:
      tags:
        - "trips"
      summary: "List all trips"
      description: "List all the trips associated to the given route along with their summary information."
      produces:
      - "application/json"
      parameters:
      - name: "routeID"
        in: "path"
        description: "Route identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TripSummary"
  /v2/trips/service/{serviceID}:
    get:
      tags:
        - "trips"
      summary: "List all trips for service"
      description: "List all the trips associated to the given service along with their summary information."
      produces:
      - "application/json"
      parameters:
      - name: "serviceID"
        in: "path"
        description: "Service identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TripSummary"
  /v2/trips/route/{routeID}/service/{serviceID}:
    get:
      tags:
        - "trips"
      summary: "List all trips"
      description: "List all the trips associated to the given route and service along with their summary information."
      produces:
      - "application/json"
      parameters:
      - name: "routeID"
        in: "path"
        description: "Route identifier"
        required: true
        type: "string"
      - name: "serviceID"
        in: "path"
        description: "Service identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TripSummary"
  /v2/trips/{tripID}:
    get:
      tags:
        - "trips"
      summary: "Get single trip"
      description: "Get all details concerning a single trip, including the stops with their arrival/departure times."
      produces:
      - "application/json"
      parameters:
      - name: "tripID"
        in: "path"
        description: "Trip identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Trip"
        404:
          description: "Trip not found"
  /v2/trips.txt:
    get:
      tags:
        - "trips"
      summary: "List all trips"
      description: "List all trips in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/trips.csv:
    get:
      tags:
        - "trips"
      summary: "List all trips"
      description: "List all trips in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/stops:
    get:
      tags:
        - "stops"
      summary: "List all stops"
      description: "List all the stops along with their summary information."
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StopSummary"
  /v2/stops/{stopID}:
    get:
      tags:
        - "stops"
      summary: "Get single stop"
      description: "Get all details concerning a single stop."
      produces:
      - "application/json"
      parameters:
      - name: "stopID"
        in: "path"
        description: "Stop identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Stop"
        404:
          description: "Stop not found"
  /v2/stop-times:
    get:
      tags:
        - "stops"
      summary: "List all times"
      description: "List all the defined stop times."
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StopTime"
  /v2/stop-times/after/{afterTime}:
    get:
      tags:
        - "stops"
      summary: "List all times after time"
      description: "List all the stop times equal or after the given time."
      produces:
      - "application/json"
      parameters:
      - name: "afterTime"
        in: "path"
        description: "Formatted time"
        required: true
        type: "string"
        pattern: '^\d{2}-\d{2}-\d{2}$'
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StopTime"
  /v2/stop-times/stop/{stopID}:
    get:
      tags:
        - "stops"
      summary: "List all times for stop"
      description: "List all the stop times related to a single stop."
      produces:
      - "application/json"
      parameters:
      - name: "stopID"
        in: "path"
        description: "Stop identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StopTime"
  /v2/stop-times/stop/{stopID}/after/{afterTime}:
    get:
      tags:
        - "stops"
      summary: "List all times for stop after time"
      description: "List all the stop times related to a single stop equal or after the given time."
      produces:
      - "application/json"
      parameters:
      - name: "stopID"
        in: "path"
        description: "Stop identifier"
        required: true
        type: "string"
      - name: "afterTime"
        in: "path"
        description: "Formatted time"
        required: true
        type: "string"
        pattern: '^\d{2}-\d{2}-\d{2}$'
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StopTime"
  /v2/stop-times/trip/{tripID}:
    get:
      tags:
        - "stops"
      summary: "List all times for trip"
      description: "List all the stop times related to a single trip."
      produces:
      - "application/json"
      parameters:
      - name: "tripID"
        in: "path"
        description: "Trip identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StopTime"
  /v2/stop-times/trip/{tripID}/after/{afterTime}:
    get:
      tags:
        - "stops"
      summary: "List all times for trip after time"
      description: "List all the stop times related to a single trip after the given time."
      produces:
      - "application/json"
      parameters:
      - name: "tripID"
        in: "path"
        description: "Trip identifier"
        required: true
        type: "string"
      - name: "afterTime"
        in: "path"
        description: "Formatted time"
        required: true
        type: "string"
        pattern: '^\d{2}-\d{2}-\d{2}$'
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StopTime"
  /v2/stops.txt:
    get:
      tags:
        - "stops"
      summary: "List all stops"
      description: "List all stops in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/stops.csv:
    get:
      tags:
        - "stops"
      summary: "List all stops"
      description: "List all stops in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/stop_times.txt:
    get:
      tags:
        - "stops"
      summary: "List all stop times"
      description: "List all stop times in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/stop_times.csv:
    get:
      tags:
        - "stops"
      summary: "List all stop times"
      description: "List all stop times in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/agency.txt:
    get:
      tags:
        - "other"
      summary: "Agency information"
      description: "Expose agency's information in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/agency.csv:
    get:
      tags:
        - "other"
      summary: "Agency information"
      description: "Expose agency's information in GTFS representation."
      produces:
      - "text/csv"
      responses:
        200:
          description: "Successful operation"
  /v2/docs:
    get:
      tags:
        - "other"
      summary: "Swagger documentation"
      description: ""
      responses:
        200:
          description: "Successful operation"
definitions:
  Route:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      color:
        type: "string"
      shortName:
        type: "string"
      longName:
        type: "string"
      agencyId:
        type: "string"
      type:
        type: "integer"
        format: "int64"
      services:
        type: "object"
        properties:
          id:
            type: "integer"
            format: "int64"
          serviceId:
            type: "integer"
            format: "int64"
          stops:
            type: "array"
            items:
              $ref: "#/definitions/StopSummary"
  RouteSummary:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      color:
        type: "string"
      shortName:
        type: "string"
      longName:
        type: "string"
      agencyId:
        type: "string"
      type:
        type: "integer"
        format: "int64"
  Trip:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      routeId:
        type: "integer"
        format: "int64"
      variantId:
        type: "integer"
        format: "int64"
      serviceId:
        type: "integer"
        format: "int64"
      stops:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
            name:
              type: "string"
            latitude:
              type: "number"
            longitude:
              type: "number"
            arrivalTime:
              type: "string"
            departureTime:
              type: "string"
  TripSummary:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      route:
        type: "object"
        $ref: "#/definitions/RouteSummary"
      variantId:
        type: "integer"
        format: "int64"
      serviceId:
        type: "integer"
        format: "int64"
  Stop:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      latitude:
        type: "number"
      longitude:
        type: "number"
  StopSummary:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      latitude:
        type: "number"
      longitude:
        type: "number"
  StopTime:
    type: "object"
    properties:
      tripId:
        type: "integer"
        format: "int64"
      serviceId:
        type: "integer"
        format: "int64"
      stopId:
        type: "integer"
        format: "int64"
      arrivalTime:
        type: "string"
      departureTime:
        type: "string"
      sequence:
        type: "integer"
  Service:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      weekdays:
        type: "object"
        properties:
          monday:
            type: "boolean"
          tuesday:
            type: "boolean"
          wednesday:
            type: "boolean"
          thursday:
            type: "boolean"
          friday:
            type: "boolean"
          saturday:
            type: "boolean"
          sunday:
            type: "boolean"